#include<stdio.h>
#include<time.h>
#include <unistd.h>
#include<pthread.h>
#include<semaphore.h>
#define n 1
#define n1 5
int st[n];
int b=0;
sem_t mt;
sem_t bbr;
void *barber1()
{
printf("Barber Sleeping\n");
b=1;
printf("customer 0 went for awake the barber\n");
sem_wait(&bbr);
printf("Barber woke up\n");
sleep(1);
b=0;
}
void *handler1(void *pr)
{
int x1; 
    x1 = *((int *) pr);
int flag1=0;
int i=0;
int ct=0;
for(i=0;i<n;i++)
{
    if(st[i]==1)
    {
    flag1=1;
    ct++;      
    }
}
printf("Count=%d",ct);
if(ct==n)
{
    printf("%d Customer Returned\n",x1);
    return 0;
}
if(flag1==1)
{
    st[x1]=1;
    printf("%d Customer waiting\n",x1); 
    sem_wait(&mt);
}
if(b==1)
{
    printf("Customer %d woke up barber",x1);
    sem_post(&bbr);
}   
printf("Cutting Hair of customer %d\n",x1);
st[x1]=1;
sleep(5);
flag1=0;
for(i=0;i<n;i++)
{
    if(st[i]==1)
    {
        flag1=1;     
    }
}
st[x1]=0;
printf("Finished cutting Hair of customer %d\n",x1);
if(flag1==1) 
sem_post(&mt);
}
int main()
{
sem_init(&mt, 0, n);
sem_init(&bbr, 0, 1);
pthread_t thread[n1];
pthread_t barber;
int i=0;
for(i=0;i<n;i++)
{
    st[i]=0;
}

pthread_create(&barber,NULL,barber1,NULL);
pthread_join(barber,NULL);
for(i=0;i<n1;i++)
{
    sleep(1);
    printf("Customer entered %d\n",i);
    pthread_create(&thread[i], NULL, handler1, (void *)&i);
    pthread_join(thread[i],NULL);
}
}
